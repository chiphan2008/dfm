/**
 * SMARTBUS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "ModelRevenueChart.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace api {

ModelRevenueChart::ModelRevenueChart(QString* json) {
    init();
    this->fromJson(*json);
}

ModelRevenueChart::ModelRevenueChart() {
    init();
}

ModelRevenueChart::~ModelRevenueChart() {
    this->cleanup();
}

void
ModelRevenueChart::init() {
    title_chart = new QString("");
    shift_id = 0L;
    sub_total = 0.0f;
    total = 0.0f;
    datetime = NULL;
}

void
ModelRevenueChart::cleanup() {
    if(title_chart != nullptr) {
        delete title_chart;
    }



    if(datetime != nullptr) {
        delete datetime;
    }
}

ModelRevenueChart*
ModelRevenueChart::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
ModelRevenueChart::fromJsonObject(QJsonObject &pJson) {
    ::api::setValue(&title_chart, pJson["title_chart"], "QString", "QString");
    ::api::setValue(&shift_id, pJson["shift_id"], "qint64", "");
    ::api::setValue(&sub_total, pJson["sub_total"], "float", "");
    ::api::setValue(&total, pJson["total"], "float", "");
    ::api::setValue(&datetime, pJson["datetime"], "QDateTime", "QDateTime");
}

QString
ModelRevenueChart::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
ModelRevenueChart::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    toJsonValue(QString("title_chart"), title_chart, obj, QString("QString"));
    obj->insert("shift_id", QJsonValue(shift_id));
    obj->insert("sub_total", QJsonValue(sub_total));
    obj->insert("total", QJsonValue(total));
    toJsonValue(QString("datetime"), datetime, obj, QString("QDateTime"));

    return obj;
}

QString*
ModelRevenueChart::getTitleChart() {
    return title_chart;
}
void
ModelRevenueChart::setTitleChart(QString* title_chart) {
    this->title_chart = title_chart;
}

qint64
ModelRevenueChart::getShiftId() {
    return shift_id;
}
void
ModelRevenueChart::setShiftId(qint64 shift_id) {
    this->shift_id = shift_id;
}

float
ModelRevenueChart::getSubTotal() {
    return sub_total;
}
void
ModelRevenueChart::setSubTotal(float sub_total) {
    this->sub_total = sub_total;
}

float
ModelRevenueChart::getTotal() {
    return total;
}
void
ModelRevenueChart::setTotal(float total) {
    this->total = total;
}

QDateTime*
ModelRevenueChart::getDatetime() {
    return datetime;
}
void
ModelRevenueChart::setDatetime(QDateTime* datetime) {
    this->datetime = datetime;
}


}

