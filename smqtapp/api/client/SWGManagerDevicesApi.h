/**
 * SMARTBUS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#ifndef _SWG_SWGManagerDevicesApi_H_
#define _SWG_SWGManagerDevicesApi_H_

#include "SWGHttpRequest.h"

#include "ModelManagerDevice.h"
#include "ModelRevenueChart.h"

#include <QObject>

namespace api {

class SWGManagerDevicesApi: public QObject {
    Q_OBJECT

public:
    SWGManagerDevicesApi();
    SWGManagerDevicesApi(QString host, QString basePath);
    ~SWGManagerDevicesApi();

    QString host;
    QString basePath;
    QMap<QString, QString> defaultHeaders;

    void managerDeviceGetRevenueById(qint64 device_id);
    void managerGetDeviceById(qint64 device_id);
    void managerListDevices(qint32 page, qint32 limit);
    
private:
    void managerDeviceGetRevenueByIdCallback (HttpRequestWorker * worker);
    void managerGetDeviceByIdCallback (HttpRequestWorker * worker);
    void managerListDevicesCallback (HttpRequestWorker * worker);
    
signals:
    void managerDeviceGetRevenueByIdSignal(QList<ModelRevenueChart*>* summary);
    void managerGetDeviceByIdSignal(ModelManagerDevice* summary);
    void managerListDevicesSignal(QList<ModelManagerDevice*>* summary);
    
    void managerDeviceGetRevenueByIdSignalE(QList<ModelRevenueChart*>* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void managerGetDeviceByIdSignalE(ModelManagerDevice* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void managerListDevicesSignalE(QList<ModelManagerDevice*>* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    
    void managerDeviceGetRevenueByIdSignalEFull(HttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void managerGetDeviceByIdSignalEFull(HttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void managerListDevicesSignalEFull(HttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    
};

}
#endif
