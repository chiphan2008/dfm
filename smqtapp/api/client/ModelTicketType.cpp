/**
 * SMARTBUS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "ModelTicketType.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace api {

ModelTicketType::ModelTicketType(QString* json) {
    init();
    this->fromJson(*json);
}

ModelTicketType::ModelTicketType() {
    init();
}

ModelTicketType::~ModelTicketType() {
    this->cleanup();
}

void
ModelTicketType::init() {
    id = 0L;
    comany_id = 0L;
    name = new QString("");
    description = new QString("");
    order_code = new QString("");
    sign = new QString("");
    sign_form = new QString("");
    ticket_prices = new QList<ModelTicketPrice*>();
    created_at = NULL;
    updated_at = NULL;
}

void
ModelTicketType::cleanup() {


    if(name != nullptr) {
        delete name;
    }
    if(description != nullptr) {
        delete description;
    }
    if(order_code != nullptr) {
        delete order_code;
    }
    if(sign != nullptr) {
        delete sign;
    }
    if(sign_form != nullptr) {
        delete sign_form;
    }
    if(ticket_prices != nullptr) {
        QList<ModelTicketPrice*>* arr = ticket_prices;
        foreach(ModelTicketPrice* o, *arr) {
            delete o;
        }
        delete ticket_prices;
    }
    if(created_at != nullptr) {
        delete created_at;
    }
    if(updated_at != nullptr) {
        delete updated_at;
    }
}

ModelTicketType*
ModelTicketType::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
ModelTicketType::fromJsonObject(QJsonObject &pJson) {
    ::api::setValue(&id, pJson["id"], "qint64", "");
    ::api::setValue(&comany_id, pJson["comany_id"], "qint64", "");
    ::api::setValue(&name, pJson["name"], "QString", "QString");
    ::api::setValue(&description, pJson["description"], "QString", "QString");
    ::api::setValue(&order_code, pJson["order_code"], "QString", "QString");
    ::api::setValue(&sign, pJson["sign"], "QString", "QString");
    ::api::setValue(&sign_form, pJson["sign_form"], "QString", "QString");
    ::api::setValue(&ticket_prices, pJson["ticket_prices"], "QList", "ModelTicketPrice");
    ::api::setValue(&created_at, pJson["created_at"], "QDateTime", "QDateTime");
    ::api::setValue(&updated_at, pJson["updated_at"], "QDateTime", "QDateTime");
}

QString
ModelTicketType::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
ModelTicketType::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    obj->insert("id", QJsonValue(id));
    obj->insert("comany_id", QJsonValue(comany_id));
    toJsonValue(QString("name"), name, obj, QString("QString"));
    toJsonValue(QString("description"), description, obj, QString("QString"));
    toJsonValue(QString("order_code"), order_code, obj, QString("QString"));
    toJsonValue(QString("sign"), sign, obj, QString("QString"));
    toJsonValue(QString("sign_form"), sign_form, obj, QString("QString"));
    QJsonArray ticket_pricesJsonArray;
    toJsonArray((QList<void*>*)ticket_prices, &ticket_pricesJsonArray, "ticket_prices", "ModelTicketPrice");
    obj->insert("ticket_prices", ticket_pricesJsonArray);
    toJsonValue(QString("created_at"), created_at, obj, QString("QDateTime"));
    toJsonValue(QString("updated_at"), updated_at, obj, QString("QDateTime"));

    return obj;
}

qint64
ModelTicketType::getId() {
    return id;
}
void
ModelTicketType::setId(qint64 id) {
    this->id = id;
}

qint64
ModelTicketType::getComanyId() {
    return comany_id;
}
void
ModelTicketType::setComanyId(qint64 comany_id) {
    this->comany_id = comany_id;
}

QString*
ModelTicketType::getName() {
    return name;
}
void
ModelTicketType::setName(QString* name) {
    this->name = name;
}

QString*
ModelTicketType::getDescription() {
    return description;
}
void
ModelTicketType::setDescription(QString* description) {
    this->description = description;
}

QString*
ModelTicketType::getOrderCode() {
    return order_code;
}
void
ModelTicketType::setOrderCode(QString* order_code) {
    this->order_code = order_code;
}

QString*
ModelTicketType::getSign() {
    return sign;
}
void
ModelTicketType::setSign(QString* sign) {
    this->sign = sign;
}

QString*
ModelTicketType::getSignForm() {
    return sign_form;
}
void
ModelTicketType::setSignForm(QString* sign_form) {
    this->sign_form = sign_form;
}

QList<ModelTicketPrice*>*
ModelTicketType::getTicketPrices() {
    return ticket_prices;
}
void
ModelTicketType::setTicketPrices(QList<ModelTicketPrice*>* ticket_prices) {
    this->ticket_prices = ticket_prices;
}

QDateTime*
ModelTicketType::getCreatedAt() {
    return created_at;
}
void
ModelTicketType::setCreatedAt(QDateTime* created_at) {
    this->created_at = created_at;
}

QDateTime*
ModelTicketType::getUpdatedAt() {
    return updated_at;
}
void
ModelTicketType::setUpdatedAt(QDateTime* updated_at) {
    this->updated_at = updated_at;
}


}

