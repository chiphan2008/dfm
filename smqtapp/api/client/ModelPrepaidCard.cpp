/**
 * SMARTBUS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "ModelPrepaidCard.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace api {

ModelPrepaidCard::ModelPrepaidCard(QString* json) {
    init();
    this->fromJson(*json);
}

ModelPrepaidCard::ModelPrepaidCard() {
    init();
}

ModelPrepaidCard::~ModelPrepaidCard() {
    this->cleanup();
}

void
ModelPrepaidCard::init() {
    id = 0L;
    comany_id = 0L;
    rfid = new QString("");
    balance = 0.0f;
    barcode = new QString("");
    expiration_date = NULL;
    created_at = NULL;
    updated_at = NULL;
}

void
ModelPrepaidCard::cleanup() {


    if(rfid != nullptr) {
        delete rfid;
    }

    if(barcode != nullptr) {
        delete barcode;
    }
    if(expiration_date != nullptr) {
        delete expiration_date;
    }
    if(created_at != nullptr) {
        delete created_at;
    }
    if(updated_at != nullptr) {
        delete updated_at;
    }
}

ModelPrepaidCard*
ModelPrepaidCard::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
ModelPrepaidCard::fromJsonObject(QJsonObject &pJson) {
    ::api::setValue(&id, pJson["id"], "qint64", "");
    ::api::setValue(&comany_id, pJson["comany_id"], "qint64", "");
    ::api::setValue(&rfid, pJson["rfid"], "QString", "QString");
    ::api::setValue(&balance, pJson["balance"], "float", "");
    ::api::setValue(&barcode, pJson["barcode"], "QString", "QString");
    ::api::setValue(&expiration_date, pJson["expiration_date"], "QDateTime", "QDateTime");
    ::api::setValue(&created_at, pJson["created_at"], "QDateTime", "QDateTime");
    ::api::setValue(&updated_at, pJson["updated_at"], "QDateTime", "QDateTime");
}

QString
ModelPrepaidCard::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
ModelPrepaidCard::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    obj->insert("id", QJsonValue(id));
    obj->insert("comany_id", QJsonValue(comany_id));
    toJsonValue(QString("rfid"), rfid, obj, QString("QString"));
    obj->insert("balance", QJsonValue(balance));
    toJsonValue(QString("barcode"), barcode, obj, QString("QString"));
    toJsonValue(QString("expiration_date"), expiration_date, obj, QString("QDateTime"));
    toJsonValue(QString("created_at"), created_at, obj, QString("QDateTime"));
    toJsonValue(QString("updated_at"), updated_at, obj, QString("QDateTime"));

    return obj;
}

qint64
ModelPrepaidCard::getId() {
    return id;
}
void
ModelPrepaidCard::setId(qint64 id) {
    this->id = id;
}

qint64
ModelPrepaidCard::getComanyId() {
    return comany_id;
}
void
ModelPrepaidCard::setComanyId(qint64 comany_id) {
    this->comany_id = comany_id;
}

QString*
ModelPrepaidCard::getRfid() {
    return rfid;
}
void
ModelPrepaidCard::setRfid(QString* rfid) {
    this->rfid = rfid;
}

float
ModelPrepaidCard::getBalance() {
    return balance;
}
void
ModelPrepaidCard::setBalance(float balance) {
    this->balance = balance;
}

QString*
ModelPrepaidCard::getBarcode() {
    return barcode;
}
void
ModelPrepaidCard::setBarcode(QString* barcode) {
    this->barcode = barcode;
}

QDateTime*
ModelPrepaidCard::getExpirationDate() {
    return expiration_date;
}
void
ModelPrepaidCard::setExpirationDate(QDateTime* expiration_date) {
    this->expiration_date = expiration_date;
}

QDateTime*
ModelPrepaidCard::getCreatedAt() {
    return created_at;
}
void
ModelPrepaidCard::setCreatedAt(QDateTime* created_at) {
    this->created_at = created_at;
}

QDateTime*
ModelPrepaidCard::getUpdatedAt() {
    return updated_at;
}
void
ModelPrepaidCard::setUpdatedAt(QDateTime* updated_at) {
    this->updated_at = updated_at;
}


}

