/**
 * SMARTBUS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "ModelDevice.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace api {

ModelDevice::ModelDevice(QString* json) {
    init();
    this->fromJson(*json);
}

ModelDevice::ModelDevice() {
    init();
}

ModelDevice::~ModelDevice() {
    this->cleanup();
}

void
ModelDevice::init() {
    id = 0L;
    device_model = new ModelDevModel();
    company = new ModelCompany();
    identity = new QString("");
    is_running = 0;
    version = 0L;
    lat = 0.0f;
    lng = 0.0f;
    created_at = NULL;
    updated_at = NULL;
}

void
ModelDevice::cleanup() {

    if(device_model != nullptr) {
        delete device_model;
    }
    if(company != nullptr) {
        delete company;
    }
    if(identity != nullptr) {
        delete identity;
    }




    if(created_at != nullptr) {
        delete created_at;
    }
    if(updated_at != nullptr) {
        delete updated_at;
    }
}

ModelDevice*
ModelDevice::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
ModelDevice::fromJsonObject(QJsonObject &pJson) {
    ::api::setValue(&id, pJson["id"], "qint64", "");
    ::api::setValue(&device_model, pJson["device_model"], "ModelDevModel", "ModelDevModel");
    ::api::setValue(&company, pJson["company"], "ModelCompany", "ModelCompany");
    ::api::setValue(&identity, pJson["identity"], "QString", "QString");
    ::api::setValue(&is_running, pJson["is_running"], "qint32", "");
    ::api::setValue(&version, pJson["version"], "qint64", "");
    ::api::setValue(&lat, pJson["lat"], "float", "");
    ::api::setValue(&lng, pJson["lng"], "float", "");
    ::api::setValue(&created_at, pJson["created_at"], "QDateTime", "QDateTime");
    ::api::setValue(&updated_at, pJson["updated_at"], "QDateTime", "QDateTime");
}

QString
ModelDevice::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
ModelDevice::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    obj->insert("id", QJsonValue(id));
    toJsonValue(QString("device_model"), device_model, obj, QString("ModelDevModel"));
    toJsonValue(QString("company"), company, obj, QString("ModelCompany"));
    toJsonValue(QString("identity"), identity, obj, QString("QString"));
    obj->insert("is_running", QJsonValue(is_running));
    obj->insert("version", QJsonValue(version));
    obj->insert("lat", QJsonValue(lat));
    obj->insert("lng", QJsonValue(lng));
    toJsonValue(QString("created_at"), created_at, obj, QString("QDateTime"));
    toJsonValue(QString("updated_at"), updated_at, obj, QString("QDateTime"));

    return obj;
}

qint64
ModelDevice::getId() {
    return id;
}
void
ModelDevice::setId(qint64 id) {
    this->id = id;
}

ModelDevModel*
ModelDevice::getDeviceModel() {
    return device_model;
}
void
ModelDevice::setDeviceModel(ModelDevModel* device_model) {
    this->device_model = device_model;
}

ModelCompany*
ModelDevice::getCompany() {
    return company;
}
void
ModelDevice::setCompany(ModelCompany* company) {
    this->company = company;
}

QString*
ModelDevice::getIdentity() {
    return identity;
}
void
ModelDevice::setIdentity(QString* identity) {
    this->identity = identity;
}

qint32
ModelDevice::getIsRunning() {
    return is_running;
}
void
ModelDevice::setIsRunning(qint32 is_running) {
    this->is_running = is_running;
}

qint64
ModelDevice::getVersion() {
    return version;
}
void
ModelDevice::setVersion(qint64 version) {
    this->version = version;
}

float
ModelDevice::getLat() {
    return lat;
}
void
ModelDevice::setLat(float lat) {
    this->lat = lat;
}

float
ModelDevice::getLng() {
    return lng;
}
void
ModelDevice::setLng(float lng) {
    this->lng = lng;
}

QDateTime*
ModelDevice::getCreatedAt() {
    return created_at;
}
void
ModelDevice::setCreatedAt(QDateTime* created_at) {
    this->created_at = created_at;
}

QDateTime*
ModelDevice::getUpdatedAt() {
    return updated_at;
}
void
ModelDevice::setUpdatedAt(QDateTime* updated_at) {
    this->updated_at = updated_at;
}


}

