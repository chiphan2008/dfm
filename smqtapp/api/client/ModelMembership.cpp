/**
 * SMARTBUS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "ModelMembership.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace api {

ModelMembership::ModelMembership(QString* json) {
    init();
    this->fromJson(*json);
}

ModelMembership::ModelMembership() {
    init();
}

ModelMembership::~ModelMembership() {
    this->cleanup();
}

void
ModelMembership::init() {
    id = 0L;
    comany_id = 0L;
    rfid = new QString("");
    fullname = new QString("");
    address = new QString("");
    phone = new QString("");
    balance = 0.0f;
    sidn = new QString("");
    email = new QString("");
    barcode = new QString("");
    birthday = NULL;
    subscription_type = new ModelSubscriptionType();
    created_at = NULL;
    updated_at = NULL;
}

void
ModelMembership::cleanup() {


    if(rfid != nullptr) {
        delete rfid;
    }
    if(fullname != nullptr) {
        delete fullname;
    }
    if(address != nullptr) {
        delete address;
    }
    if(phone != nullptr) {
        delete phone;
    }

    if(sidn != nullptr) {
        delete sidn;
    }
    if(email != nullptr) {
        delete email;
    }
    if(barcode != nullptr) {
        delete barcode;
    }
    if(birthday != nullptr) {
        delete birthday;
    }
    if(subscription_type != nullptr) {
        delete subscription_type;
    }
    if(created_at != nullptr) {
        delete created_at;
    }
    if(updated_at != nullptr) {
        delete updated_at;
    }
}

ModelMembership*
ModelMembership::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
ModelMembership::fromJsonObject(QJsonObject &pJson) {
    ::api::setValue(&id, pJson["id"], "qint64", "");
    ::api::setValue(&comany_id, pJson["comany_id"], "qint64", "");
    ::api::setValue(&rfid, pJson["rfid"], "QString", "QString");
    ::api::setValue(&fullname, pJson["fullname"], "QString", "QString");
    ::api::setValue(&address, pJson["address"], "QString", "QString");
    ::api::setValue(&phone, pJson["phone"], "QString", "QString");
    ::api::setValue(&balance, pJson["balance"], "float", "");
    ::api::setValue(&sidn, pJson["sidn"], "QString", "QString");
    ::api::setValue(&email, pJson["email"], "QString", "QString");
    ::api::setValue(&barcode, pJson["barcode"], "QString", "QString");
    ::api::setValue(&birthday, pJson["birthday"], "QDateTime", "QDateTime");
    ::api::setValue(&subscription_type, pJson["subscription_type"], "ModelSubscriptionType", "ModelSubscriptionType");
    ::api::setValue(&created_at, pJson["created_at"], "QDateTime", "QDateTime");
    ::api::setValue(&updated_at, pJson["updated_at"], "QDateTime", "QDateTime");
}

QString
ModelMembership::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
ModelMembership::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    obj->insert("id", QJsonValue(id));
    obj->insert("comany_id", QJsonValue(comany_id));
    toJsonValue(QString("rfid"), rfid, obj, QString("QString"));
    toJsonValue(QString("fullname"), fullname, obj, QString("QString"));
    toJsonValue(QString("address"), address, obj, QString("QString"));
    toJsonValue(QString("phone"), phone, obj, QString("QString"));
    obj->insert("balance", QJsonValue(balance));
    toJsonValue(QString("sidn"), sidn, obj, QString("QString"));
    toJsonValue(QString("email"), email, obj, QString("QString"));
    toJsonValue(QString("barcode"), barcode, obj, QString("QString"));
    toJsonValue(QString("birthday"), birthday, obj, QString("QDateTime"));
    toJsonValue(QString("subscription_type"), subscription_type, obj, QString("ModelSubscriptionType"));
    toJsonValue(QString("created_at"), created_at, obj, QString("QDateTime"));
    toJsonValue(QString("updated_at"), updated_at, obj, QString("QDateTime"));

    return obj;
}

qint64
ModelMembership::getId() {
    return id;
}
void
ModelMembership::setId(qint64 id) {
    this->id = id;
}

qint64
ModelMembership::getComanyId() {
    return comany_id;
}
void
ModelMembership::setComanyId(qint64 comany_id) {
    this->comany_id = comany_id;
}

QString*
ModelMembership::getRfid() {
    return rfid;
}
void
ModelMembership::setRfid(QString* rfid) {
    this->rfid = rfid;
}

QString*
ModelMembership::getFullname() {
    return fullname;
}
void
ModelMembership::setFullname(QString* fullname) {
    this->fullname = fullname;
}

QString*
ModelMembership::getAddress() {
    return address;
}
void
ModelMembership::setAddress(QString* address) {
    this->address = address;
}

QString*
ModelMembership::getPhone() {
    return phone;
}
void
ModelMembership::setPhone(QString* phone) {
    this->phone = phone;
}

float
ModelMembership::getBalance() {
    return balance;
}
void
ModelMembership::setBalance(float balance) {
    this->balance = balance;
}

QString*
ModelMembership::getSidn() {
    return sidn;
}
void
ModelMembership::setSidn(QString* sidn) {
    this->sidn = sidn;
}

QString*
ModelMembership::getEmail() {
    return email;
}
void
ModelMembership::setEmail(QString* email) {
    this->email = email;
}

QString*
ModelMembership::getBarcode() {
    return barcode;
}
void
ModelMembership::setBarcode(QString* barcode) {
    this->barcode = barcode;
}

QDateTime*
ModelMembership::getBirthday() {
    return birthday;
}
void
ModelMembership::setBirthday(QDateTime* birthday) {
    this->birthday = birthday;
}

ModelSubscriptionType*
ModelMembership::getSubscriptionType() {
    return subscription_type;
}
void
ModelMembership::setSubscriptionType(ModelSubscriptionType* subscription_type) {
    this->subscription_type = subscription_type;
}

QDateTime*
ModelMembership::getCreatedAt() {
    return created_at;
}
void
ModelMembership::setCreatedAt(QDateTime* created_at) {
    this->created_at = created_at;
}

QDateTime*
ModelMembership::getUpdatedAt() {
    return updated_at;
}
void
ModelMembership::setUpdatedAt(QDateTime* updated_at) {
    this->updated_at = updated_at;
}


}

