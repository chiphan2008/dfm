/**
 * SMARTBUS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#ifndef _SWG_SWGManagerMembershipsApi_H_
#define _SWG_SWGManagerMembershipsApi_H_

#include "SWGHttpRequest.h"

#include "ModelMembership.h"
#include "ModelMembershipForm.h"

#include <QObject>

namespace api {

class SWGManagerMembershipsApi: public QObject {
    Q_OBJECT

public:
    SWGManagerMembershipsApi();
    SWGManagerMembershipsApi(QString host, QString basePath);
    ~SWGManagerMembershipsApi();

    QString host;
    QString basePath;
    QMap<QString, QString> defaultHeaders;

    void managerDeleteMembership(qint64 membership_id);
    void managerGetMembershipById(qint64 membership_id);
    void managerUpdateMembership(ModelMembershipForm body);
    void managerlistMemberships();
    void manmagerCreateMembership(ModelMembershipForm body);
    
private:
    void managerDeleteMembershipCallback (HttpRequestWorker * worker);
    void managerGetMembershipByIdCallback (HttpRequestWorker * worker);
    void managerUpdateMembershipCallback (HttpRequestWorker * worker);
    void managerlistMembershipsCallback (HttpRequestWorker * worker);
    void manmagerCreateMembershipCallback (HttpRequestWorker * worker);
    
signals:
    void managerDeleteMembershipSignal();
    void managerGetMembershipByIdSignal(ModelMembership* summary);
    void managerUpdateMembershipSignal(ModelMembership* summary);
    void managerlistMembershipsSignal(QList<ModelMembership*>* summary);
    void manmagerCreateMembershipSignal(ModelMembership* summary);
    
    void managerDeleteMembershipSignalE(QNetworkReply::NetworkError error_type, QString& error_str);
    void managerGetMembershipByIdSignalE(ModelMembership* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void managerUpdateMembershipSignalE(ModelMembership* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void managerlistMembershipsSignalE(QList<ModelMembership*>* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void manmagerCreateMembershipSignalE(ModelMembership* summary, QNetworkReply::NetworkError error_type, QString& error_str);
    
    void managerDeleteMembershipSignalEFull(HttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void managerGetMembershipByIdSignalEFull(HttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void managerUpdateMembershipSignalEFull(HttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void managerlistMembershipsSignalEFull(HttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void manmagerCreateMembershipSignalEFull(HttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    
};

}
#endif
