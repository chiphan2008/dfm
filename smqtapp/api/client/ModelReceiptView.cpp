/**
 * SMARTBUS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "ModelReceiptView.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace api {

ModelReceiptView::ModelReceiptView(QString* json) {
    init();
    this->fromJson(*json);
}

ModelReceiptView::ModelReceiptView() {
    init();
}

ModelReceiptView::~ModelReceiptView() {
    this->cleanup();
}

void
ModelReceiptView::init() {
    shift_id = 0L;
    license_plates = new QString("");
    driver_name = new QString("");
    subdriver_name = new QString("");
    route_name = new QString("");
    date_time = new QString("");
    total_price = 0.0f;
    collected = 0;
}

void
ModelReceiptView::cleanup() {

    if(license_plates != nullptr) {
        delete license_plates;
    }
    if(driver_name != nullptr) {
        delete driver_name;
    }
    if(subdriver_name != nullptr) {
        delete subdriver_name;
    }
    if(route_name != nullptr) {
        delete route_name;
    }
    if(date_time != nullptr) {
        delete date_time;
    }


}

ModelReceiptView*
ModelReceiptView::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
ModelReceiptView::fromJsonObject(QJsonObject &pJson) {
    ::api::setValue(&shift_id, pJson["shift_id"], "qint64", "");
    ::api::setValue(&license_plates, pJson["license_plates"], "QString", "QString");
    ::api::setValue(&driver_name, pJson["driver_name"], "QString", "QString");
    ::api::setValue(&subdriver_name, pJson["subdriver_name"], "QString", "QString");
    ::api::setValue(&route_name, pJson["route_name"], "QString", "QString");
    ::api::setValue(&date_time, pJson["date_time"], "QString", "QString");
    ::api::setValue(&total_price, pJson["total_price"], "float", "");
    ::api::setValue(&collected, pJson["collected"], "qint32", "");
}

QString
ModelReceiptView::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
ModelReceiptView::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    obj->insert("shift_id", QJsonValue(shift_id));
    toJsonValue(QString("license_plates"), license_plates, obj, QString("QString"));
    toJsonValue(QString("driver_name"), driver_name, obj, QString("QString"));
    toJsonValue(QString("subdriver_name"), subdriver_name, obj, QString("QString"));
    toJsonValue(QString("route_name"), route_name, obj, QString("QString"));
    toJsonValue(QString("date_time"), date_time, obj, QString("QString"));
    obj->insert("total_price", QJsonValue(total_price));
    obj->insert("collected", QJsonValue(collected));

    return obj;
}

qint64
ModelReceiptView::getShiftId() {
    return shift_id;
}
void
ModelReceiptView::setShiftId(qint64 shift_id) {
    this->shift_id = shift_id;
}

QString*
ModelReceiptView::getLicensePlates() {
    return license_plates;
}
void
ModelReceiptView::setLicensePlates(QString* license_plates) {
    this->license_plates = license_plates;
}

QString*
ModelReceiptView::getDriverName() {
    return driver_name;
}
void
ModelReceiptView::setDriverName(QString* driver_name) {
    this->driver_name = driver_name;
}

QString*
ModelReceiptView::getSubdriverName() {
    return subdriver_name;
}
void
ModelReceiptView::setSubdriverName(QString* subdriver_name) {
    this->subdriver_name = subdriver_name;
}

QString*
ModelReceiptView::getRouteName() {
    return route_name;
}
void
ModelReceiptView::setRouteName(QString* route_name) {
    this->route_name = route_name;
}

QString*
ModelReceiptView::getDateTime() {
    return date_time;
}
void
ModelReceiptView::setDateTime(QString* date_time) {
    this->date_time = date_time;
}

float
ModelReceiptView::getTotalPrice() {
    return total_price;
}
void
ModelReceiptView::setTotalPrice(float total_price) {
    this->total_price = total_price;
}

qint32
ModelReceiptView::getCollected() {
    return collected;
}
void
ModelReceiptView::setCollected(qint32 collected) {
    this->collected = collected;
}


}

