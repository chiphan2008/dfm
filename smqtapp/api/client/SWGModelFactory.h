/**
 * SMARTBUS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#ifndef ModelFactory_H_
#define ModelFactory_H_


#include "ModelBusStation.h"
#include "ModelChangePasswordUser.h"
#include "ModelCollected.h"
#include "ModelCompany.h"
#include "ModelCompanyCreate.h"
#include "ModelCompanyUpdate.h"
#include "ModelDashboard.h"
#include "ModelDevModel.h"
#include "ModelDevModelForm.h"
#include "ModelDevice.h"
#include "ModelDeviceForm.h"
#include "ModelFirmware.h"
#include "ModelFirmwareForm.h"
#include "ModelGPSRecord.h"
#include "ModelGenericResponse.h"
#include "ModelLogin.h"
#include "ModelLoginView.h"
#include "ModelLogout.h"
#include "ModelMachineActivity.h"
#include "ModelMachineLogin.h"
#include "ModelMachineLoginView.h"
#include "ModelManagerDevice.h"
#include "ModelMembership.h"
#include "ModelMembershipForm.h"
#include "ModelPermission.h"
#include "ModelPermissionForm.h"
#include "ModelPing.h"
#include "ModelPrepaidCard.h"
#include "ModelPrepaidCardForm.h"
#include "ModelReceiptDetail.h"
#include "ModelReceiptForm.h"
#include "ModelReceiptSummary.h"
#include "ModelReceiptTransaction.h"
#include "ModelReceiptView.h"
#include "ModelRevenueChart.h"
#include "ModelRfidCard.h"
#include "ModelRfidCardCreate.h"
#include "ModelRfidCardUpdate.h"
#include "ModelRole.h"
#include "ModelRoleForm.h"
#include "ModelRoute.h"
#include "ModelRouteForm.h"
#include "ModelRpRouteForm.h"
#include "ModelRpStaffForm.h"
#include "ModelSubscriptionType.h"
#include "ModelSubscriptionTypeForm.h"
#include "ModelTicketAllocate.h"
#include "ModelTicketPrice.h"
#include "ModelTicketType.h"
#include "ModelTicketTypeForm.h"
#include "ModelUpdateAction.h"
#include "ModelUser.h"
#include "ModelUserCreate.h"
#include "ModelUserSearch.h"
#include "ModelUserUpdate.h"
#include "ModelVehicle.h"
#include "ModelVehicleForm.h"

namespace api {

  inline void* create(QString type) {
    if(QString("ModelBusStation").compare(type) == 0) {
      return new ModelBusStation();
    }
    if(QString("ModelChangePasswordUser").compare(type) == 0) {
      return new ModelChangePasswordUser();
    }
    if(QString("ModelCollected").compare(type) == 0) {
      return new ModelCollected();
    }
    if(QString("ModelCompany").compare(type) == 0) {
      return new ModelCompany();
    }
    if(QString("ModelCompanyCreate").compare(type) == 0) {
      return new ModelCompanyCreate();
    }
    if(QString("ModelCompanyUpdate").compare(type) == 0) {
      return new ModelCompanyUpdate();
    }
    if(QString("ModelDashboard").compare(type) == 0) {
      return new ModelDashboard();
    }
    if(QString("ModelDevModel").compare(type) == 0) {
      return new ModelDevModel();
    }
    if(QString("ModelDevModelForm").compare(type) == 0) {
      return new ModelDevModelForm();
    }
    if(QString("ModelDevice").compare(type) == 0) {
      return new ModelDevice();
    }
    if(QString("ModelDeviceForm").compare(type) == 0) {
      return new ModelDeviceForm();
    }
    if(QString("ModelFirmware").compare(type) == 0) {
      return new ModelFirmware();
    }
    if(QString("ModelFirmwareForm").compare(type) == 0) {
      return new ModelFirmwareForm();
    }
    if(QString("ModelGPSRecord").compare(type) == 0) {
      return new ModelGPSRecord();
    }
    if(QString("ModelGenericResponse").compare(type) == 0) {
      return new ModelGenericResponse();
    }
    if(QString("ModelLogin").compare(type) == 0) {
      return new ModelLogin();
    }
    if(QString("ModelLoginView").compare(type) == 0) {
      return new ModelLoginView();
    }
    if(QString("ModelLogout").compare(type) == 0) {
      return new ModelLogout();
    }
    if(QString("ModelMachineActivity").compare(type) == 0) {
      return new ModelMachineActivity();
    }
    if(QString("ModelMachineLogin").compare(type) == 0) {
      return new ModelMachineLogin();
    }
    if(QString("ModelMachineLoginView").compare(type) == 0) {
      return new ModelMachineLoginView();
    }
    if(QString("ModelManagerDevice").compare(type) == 0) {
      return new ModelManagerDevice();
    }
    if(QString("ModelMembership").compare(type) == 0) {
      return new ModelMembership();
    }
    if(QString("ModelMembershipForm").compare(type) == 0) {
      return new ModelMembershipForm();
    }
    if(QString("ModelPermission").compare(type) == 0) {
      return new ModelPermission();
    }
    if(QString("ModelPermissionForm").compare(type) == 0) {
      return new ModelPermissionForm();
    }
    if(QString("ModelPing").compare(type) == 0) {
      return new ModelPing();
    }
    if(QString("ModelPrepaidCard").compare(type) == 0) {
      return new ModelPrepaidCard();
    }
    if(QString("ModelPrepaidCardForm").compare(type) == 0) {
      return new ModelPrepaidCardForm();
    }
    if(QString("ModelReceiptDetail").compare(type) == 0) {
      return new ModelReceiptDetail();
    }
    if(QString("ModelReceiptForm").compare(type) == 0) {
      return new ModelReceiptForm();
    }
    if(QString("ModelReceiptSummary").compare(type) == 0) {
      return new ModelReceiptSummary();
    }
    if(QString("ModelReceiptTransaction").compare(type) == 0) {
      return new ModelReceiptTransaction();
    }
    if(QString("ModelReceiptView").compare(type) == 0) {
      return new ModelReceiptView();
    }
    if(QString("ModelRevenueChart").compare(type) == 0) {
      return new ModelRevenueChart();
    }
    if(QString("ModelRfidCard").compare(type) == 0) {
      return new ModelRfidCard();
    }
    if(QString("ModelRfidCardCreate").compare(type) == 0) {
      return new ModelRfidCardCreate();
    }
    if(QString("ModelRfidCardUpdate").compare(type) == 0) {
      return new ModelRfidCardUpdate();
    }
    if(QString("ModelRole").compare(type) == 0) {
      return new ModelRole();
    }
    if(QString("ModelRoleForm").compare(type) == 0) {
      return new ModelRoleForm();
    }
    if(QString("ModelRoute").compare(type) == 0) {
      return new ModelRoute();
    }
    if(QString("ModelRouteForm").compare(type) == 0) {
      return new ModelRouteForm();
    }
    if(QString("ModelRpRouteForm").compare(type) == 0) {
      return new ModelRpRouteForm();
    }
    if(QString("ModelRpStaffForm").compare(type) == 0) {
      return new ModelRpStaffForm();
    }
    if(QString("ModelSubscriptionType").compare(type) == 0) {
      return new ModelSubscriptionType();
    }
    if(QString("ModelSubscriptionTypeForm").compare(type) == 0) {
      return new ModelSubscriptionTypeForm();
    }
    if(QString("ModelTicketAllocate").compare(type) == 0) {
      return new ModelTicketAllocate();
    }
    if(QString("ModelTicketPrice").compare(type) == 0) {
      return new ModelTicketPrice();
    }
    if(QString("ModelTicketType").compare(type) == 0) {
      return new ModelTicketType();
    }
    if(QString("ModelTicketTypeForm").compare(type) == 0) {
      return new ModelTicketTypeForm();
    }
    if(QString("ModelUpdateAction").compare(type) == 0) {
      return new ModelUpdateAction();
    }
    if(QString("ModelUser").compare(type) == 0) {
      return new ModelUser();
    }
    if(QString("ModelUserCreate").compare(type) == 0) {
      return new ModelUserCreate();
    }
    if(QString("ModelUserSearch").compare(type) == 0) {
      return new ModelUserSearch();
    }
    if(QString("ModelUserUpdate").compare(type) == 0) {
      return new ModelUserUpdate();
    }
    if(QString("ModelVehicle").compare(type) == 0) {
      return new ModelVehicle();
    }
    if(QString("ModelVehicleForm").compare(type) == 0) {
      return new ModelVehicleForm();
    }
    
    return nullptr;
  }

  inline void* create(QString json, QString type) {
    void* val = create(type);
    if(val != nullptr) {
      SWGObject* obj = static_cast<SWGObject*>(val);
      return obj->fromJson(json);
    }
    if(type.startsWith("QString")) {
      return new QString();
    }
    return nullptr;
  }

}

#endif /* ModelFactory_H_ */
