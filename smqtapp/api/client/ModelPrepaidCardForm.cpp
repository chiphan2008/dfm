/**
 * SMARTBUS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "ModelPrepaidCardForm.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace api {

ModelPrepaidCardForm::ModelPrepaidCardForm(QString* json) {
    init();
    this->fromJson(*json);
}

ModelPrepaidCardForm::ModelPrepaidCardForm() {
    init();
}

ModelPrepaidCardForm::~ModelPrepaidCardForm() {
    this->cleanup();
}

void
ModelPrepaidCardForm::init() {
    id = 0L;
    comany_id = 0L;
    rfid = new QString("");
    balance = 0.0f;
    barcode = new QString("");
    expiration_date = NULL;
}

void
ModelPrepaidCardForm::cleanup() {


    if(rfid != nullptr) {
        delete rfid;
    }

    if(barcode != nullptr) {
        delete barcode;
    }
    if(expiration_date != nullptr) {
        delete expiration_date;
    }
}

ModelPrepaidCardForm*
ModelPrepaidCardForm::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
ModelPrepaidCardForm::fromJsonObject(QJsonObject &pJson) {
    ::api::setValue(&id, pJson["id"], "qint64", "");
    ::api::setValue(&comany_id, pJson["comany_id"], "qint64", "");
    ::api::setValue(&rfid, pJson["rfid"], "QString", "QString");
    ::api::setValue(&balance, pJson["balance"], "float", "");
    ::api::setValue(&barcode, pJson["barcode"], "QString", "QString");
    ::api::setValue(&expiration_date, pJson["expiration_date"], "QDateTime", "QDateTime");
}

QString
ModelPrepaidCardForm::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
ModelPrepaidCardForm::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    obj->insert("id", QJsonValue(id));
    obj->insert("comany_id", QJsonValue(comany_id));
    toJsonValue(QString("rfid"), rfid, obj, QString("QString"));
    obj->insert("balance", QJsonValue(balance));
    toJsonValue(QString("barcode"), barcode, obj, QString("QString"));
    toJsonValue(QString("expiration_date"), expiration_date, obj, QString("QDateTime"));

    return obj;
}

qint64
ModelPrepaidCardForm::getId() {
    return id;
}
void
ModelPrepaidCardForm::setId(qint64 id) {
    this->id = id;
}

qint64
ModelPrepaidCardForm::getComanyId() {
    return comany_id;
}
void
ModelPrepaidCardForm::setComanyId(qint64 comany_id) {
    this->comany_id = comany_id;
}

QString*
ModelPrepaidCardForm::getRfid() {
    return rfid;
}
void
ModelPrepaidCardForm::setRfid(QString* rfid) {
    this->rfid = rfid;
}

float
ModelPrepaidCardForm::getBalance() {
    return balance;
}
void
ModelPrepaidCardForm::setBalance(float balance) {
    this->balance = balance;
}

QString*
ModelPrepaidCardForm::getBarcode() {
    return barcode;
}
void
ModelPrepaidCardForm::setBarcode(QString* barcode) {
    this->barcode = barcode;
}

QDateTime*
ModelPrepaidCardForm::getExpirationDate() {
    return expiration_date;
}
void
ModelPrepaidCardForm::setExpirationDate(QDateTime* expiration_date) {
    this->expiration_date = expiration_date;
}


}

