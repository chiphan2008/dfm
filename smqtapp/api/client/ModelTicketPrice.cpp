/**
 * SMARTBUS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "ModelTicketPrice.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace api {

ModelTicketPrice::ModelTicketPrice(QString* json) {
    init();
    this->fromJson(*json);
}

ModelTicketPrice::ModelTicketPrice() {
    init();
}

ModelTicketPrice::~ModelTicketPrice() {
    this->cleanup();
}

void
ModelTicketPrice::init() {
    id = 0L;
    ticket_type_id = 0L;
    price = 0.0f;
    created_at = NULL;
    updated_at = NULL;
}

void
ModelTicketPrice::cleanup() {



    if(created_at != nullptr) {
        delete created_at;
    }
    if(updated_at != nullptr) {
        delete updated_at;
    }
}

ModelTicketPrice*
ModelTicketPrice::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
ModelTicketPrice::fromJsonObject(QJsonObject &pJson) {
    ::api::setValue(&id, pJson["id"], "qint64", "");
    ::api::setValue(&ticket_type_id, pJson["ticket_type_id"], "qint64", "");
    ::api::setValue(&price, pJson["price"], "float", "");
    ::api::setValue(&created_at, pJson["created_at"], "QDateTime", "QDateTime");
    ::api::setValue(&updated_at, pJson["updated_at"], "QDateTime", "QDateTime");
}

QString
ModelTicketPrice::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
ModelTicketPrice::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    obj->insert("id", QJsonValue(id));
    obj->insert("ticket_type_id", QJsonValue(ticket_type_id));
    obj->insert("price", QJsonValue(price));
    toJsonValue(QString("created_at"), created_at, obj, QString("QDateTime"));
    toJsonValue(QString("updated_at"), updated_at, obj, QString("QDateTime"));

    return obj;
}

qint64
ModelTicketPrice::getId() {
    return id;
}
void
ModelTicketPrice::setId(qint64 id) {
    this->id = id;
}

qint64
ModelTicketPrice::getTicketTypeId() {
    return ticket_type_id;
}
void
ModelTicketPrice::setTicketTypeId(qint64 ticket_type_id) {
    this->ticket_type_id = ticket_type_id;
}

float
ModelTicketPrice::getPrice() {
    return price;
}
void
ModelTicketPrice::setPrice(float price) {
    this->price = price;
}

QDateTime*
ModelTicketPrice::getCreatedAt() {
    return created_at;
}
void
ModelTicketPrice::setCreatedAt(QDateTime* created_at) {
    this->created_at = created_at;
}

QDateTime*
ModelTicketPrice::getUpdatedAt() {
    return updated_at;
}
void
ModelTicketPrice::setUpdatedAt(QDateTime* updated_at) {
    this->updated_at = updated_at;
}


}

