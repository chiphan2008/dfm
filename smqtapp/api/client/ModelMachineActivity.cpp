/**
 * SMARTBUS API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "ModelMachineActivity.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace api {

ModelMachineActivity::ModelMachineActivity(QString* json) {
    init();
    this->fromJson(*json);
}

ModelMachineActivity::ModelMachineActivity() {
    init();
}

ModelMachineActivity::~ModelMachineActivity() {
    this->cleanup();
}

void
ModelMachineActivity::init() {
    timestamp = 0L;
    action = new QString("");
    subject_data = new QString("");
    subject_type = new QString("");
}

void
ModelMachineActivity::cleanup() {

    if(action != nullptr) {
        delete action;
    }
    if(subject_data != nullptr) {
        delete subject_data;
    }
    if(subject_type != nullptr) {
        delete subject_type;
    }
}

ModelMachineActivity*
ModelMachineActivity::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
ModelMachineActivity::fromJsonObject(QJsonObject &pJson) {
    ::api::setValue(&timestamp, pJson["timestamp"], "qint64", "");
    ::api::setValue(&action, pJson["action"], "QString", "QString");
    ::api::setValue(&subject_data, pJson["subject_data"], "QString", "QString");
    ::api::setValue(&subject_type, pJson["subject_type"], "QString", "QString");
}

QString
ModelMachineActivity::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
ModelMachineActivity::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    obj->insert("timestamp", QJsonValue(timestamp));
    toJsonValue(QString("action"), action, obj, QString("QString"));
    toJsonValue(QString("subject_data"), subject_data, obj, QString("QString"));
    toJsonValue(QString("subject_type"), subject_type, obj, QString("QString"));

    return obj;
}

qint64
ModelMachineActivity::getTimestamp() {
    return timestamp;
}
void
ModelMachineActivity::setTimestamp(qint64 timestamp) {
    this->timestamp = timestamp;
}

QString*
ModelMachineActivity::getAction() {
    return action;
}
void
ModelMachineActivity::setAction(QString* action) {
    this->action = action;
}

QString*
ModelMachineActivity::getSubjectData() {
    return subject_data;
}
void
ModelMachineActivity::setSubjectData(QString* subject_data) {
    this->subject_data = subject_data;
}

QString*
ModelMachineActivity::getSubjectType() {
    return subject_type;
}
void
ModelMachineActivity::setSubjectType(QString* subject_type) {
    this->subject_type = subject_type;
}


}

