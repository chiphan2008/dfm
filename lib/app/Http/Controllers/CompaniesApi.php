<?php

/**
 * GEOSERVER API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class CompaniesApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation listClients
     *
     * List of Client.
     *
     *
     * @return Http response
     */
    public function listClients()
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing listClients as a get method ?');
    }
    /**
     * Operation createCompany
     *
     * Create Company.
     *
     *
     * @return Http response
     */
    public function createCompany()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        $body = $input['body'];


        return response('How about implementing createCompany as a post method ?');
    }
    /**
     * Operation listCompanies
     *
     * List of Companies.
     *
     *
     * @return Http response
     */
    public function listCompanies()
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing listCompanies as a get method ?');
    }
    /**
     * Operation updateCompany
     *
     * Updates a company.
     *
     *
     * @return Http response
     */
    public function updateCompany()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        $body = $input['body'];


        return response('How about implementing updateCompany as a patch method ?');
    }
    /**
     * Operation deleteCompany
     *
     * Delete a company.
     *
     * @param int $company_id company id to delete (required)
     *
     * @return Http response
     */
    public function deleteCompany($company_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteCompany as a delete method ?');
    }
    /**
     * Operation getCompanyById
     *
     * Find company by ID.
     *
     * @param int $company_id ID of company to return (required)
     *
     * @return Http response
     */
    public function getCompanyById($company_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getCompanyById as a get method ?');
    }
}
