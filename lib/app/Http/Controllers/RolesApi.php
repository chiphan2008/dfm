<?php

/**
 * GEOSERVER API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class RolesApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation createRole
     *
     * Create Role.
     *
     *
     * @return Http response
     */
    public function createRole()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling createRole');
        }
        $body = $input['body'];


        return response('How about implementing createRole as a post method ?');
    }
    /**
     * Operation listRoles
     *
     * List of roles.
     *
     *
     * @return Http response
     */
    public function listRoles()
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing listRoles as a get method ?');
    }
    /**
     * Operation updateRole
     *
     * Updates a role.
     *
     *
     * @return Http response
     */
    public function updateRole()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        $body = $input['body'];


        return response('How about implementing updateRole as a patch method ?');
    }
    /**
     * Operation deleteRole
     *
     * Deletes a role.
     *
     * @param int $role_id role id to delete (required)
     *
     * @return Http response
     */
    public function deleteRole($role_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteRole as a delete method ?');
    }
    /**
     * Operation getRoleById
     *
     * Find role by ID.
     *
     * @param int $role_id ID of role to return (required)
     *
     * @return Http response
     */
    public function getRoleById($role_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getRoleById as a get method ?');
    }
}
