<?php

/**
 * GEOSERVER API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class UnitsApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation createUnit
     *
     * Create Unit.
     *
     *
     * @return Http response
     */
    public function createUnit()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling createUnit');
        }
        $body = $input['body'];


        return response('How about implementing createUnit as a post method ?');
    }
    /**
     * Operation listUnits
     *
     * List of Units.
     *
     *
     * @return Http response
     */
    public function listUnits()
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing listUnits as a get method ?');
    }
    /**
     * Operation updateUnit
     *
     * Update a Unit.
     *
     *
     * @return Http response
     */
    public function updateUnit()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        $body = $input['body'];


        return response('How about implementing updateUnit as a patch method ?');
    }
    /**
     * Operation deleteUnit
     *
     * Delete a Unit.
     *
     * @param int $unit_id Unit Id to delete (required)
     *
     * @return Http response
     */
    public function deleteUnit($unit_id)
    {
        $input = Request::all();

        //path params validation
        if ($unit_id < 1) {
            throw new \InvalidArgumentException('invalid value for $unit_id when calling UnitsApi.deleteUnit, must be bigger than or equal to 1.');
        }


        //not path params validation

        return response('How about implementing deleteUnit as a delete method ?');
    }
    /**
     * Operation getUnitById
     *
     * Find unit by ID.
     *
     * @param int $unit_id ID of Unit to return (required)
     *
     * @return Http response
     */
    public function getUnitById($unit_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getUnitById as a get method ?');
    }
}
