<?php

/**
 * GEOSERVER API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class AccessResourcesApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation createAccessResource
     *
     * Create Access Resource.
     *
     *
     * @return Http response
     */
    public function createAccessResource()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling createAccessResource');
        }
        $body = $input['body'];


        return response('How about implementing createAccessResource as a post method ?');
    }
    /**
     * Operation listAccessResources
     *
     * List of AccessResources.
     *
     *
     * @return Http response
     */
    public function listAccessResources()
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing listAccessResources as a get method ?');
    }
    /**
     * Operation updateAccessResource
     *
     * Updates a AccessResource.
     *
     *
     * @return Http response
     */
    public function updateAccessResource()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        $body = $input['body'];


        return response('How about implementing updateAccessResource as a patch method ?');
    }
    /**
     * Operation deleteAccessResource
     *
     * Deletes a AccessResource.
     *
     * @param int $access_resource_id AccessResource Id to delete (required)
     *
     * @return Http response
     */
    public function deleteAccessResource($access_resource_id)
    {
        $input = Request::all();

        //path params validation
        if ($access_resource_id < 1) {
            throw new \InvalidArgumentException('invalid value for $access_resource_id when calling AccessResourcesApi.deleteAccessResource, must be bigger than or equal to 1.');
        }


        //not path params validation

        return response('How about implementing deleteAccessResource as a delete method ?');
    }
    /**
     * Operation getAccessResourceById
     *
     * Find Access Page by ID.
     *
     * @param int $access_resource_id ID of AccessResource to return (required)
     *
     * @return Http response
     */
    public function getAccessResourceById($access_resource_id)
    {
        $input = Request::all();

        //path params validation
        if ($access_resource_id < 1) {
            throw new \InvalidArgumentException('invalid value for $access_resource_id when calling AccessResourcesApi.getAccessResourceById, must be bigger than or equal to 1.');
        }


        //not path params validation

        return response('How about implementing getAccessResourceById as a get method ?');
    }
}
