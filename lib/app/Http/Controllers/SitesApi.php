<?php

/**
 * GEOSERVER API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class SitesApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation createSite
     *
     * Create Site.
     *
     *
     * @return Http response
     */
    public function createSite()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        $body = $input['body'];


        return response('How about implementing createSite as a post method ?');
    }
    /**
     * Operation listSites
     *
     * List of Sites.
     *
     *
     * @return Http response
     */
    public function listSites()
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing listSites as a get method ?');
    }
    /**
     * Operation updateSite
     *
     * Updates a Site.
     *
     *
     * @return Http response
     */
    public function updateSite()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        $body = $input['body'];


        return response('How about implementing updateSite as a patch method ?');
    }
    /**
     * Operation listSitesByCompanyId
     *
     * List of sites by company id.
     *
     * @param int $company_id ID of company to return (required)
     *
     * @return Http response
     */
    public function listSitesByCompanyId($company_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing listSitesByCompanyId as a get method ?');
    }
    /**
     * Operation deleteSite
     *
     * Delete a Site.
     *
     * @param int $site_id site Id to delete (required)
     *
     * @return Http response
     */
    public function deleteSite($site_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteSite as a delete method ?');
    }
    /**
     * Operation getSiteById
     *
     * Find Site by ID.
     *
     * @param int $site_id ID of Site to return (required)
     *
     * @return Http response
     */
    public function getSiteById($site_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getSiteById as a get method ?');
    }
}
