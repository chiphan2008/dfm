<?php

/**
 * GEOSERVER API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class ProductTypesApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation createProductType
     *
     * Create Product Types.
     *
     *
     * @return Http response
     */
    public function createProductType()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling createProductType');
        }
        $body = $input['body'];


        return response('How about implementing createProductType as a post method ?');
    }
    /**
     * Operation listProductTypes
     *
     * List of Product Types.
     *
     *
     * @return Http response
     */
    public function listProductTypes()
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing listProductTypes as a get method ?');
    }
    /**
     * Operation updateProductType
     *
     * Updates a Product Type.
     *
     *
     * @return Http response
     */
    public function updateProductType()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        $body = $input['body'];


        return response('How about implementing updateProductType as a patch method ?');
    }
    /**
     * Operation deleteProductType
     *
     * Delete a Product Type.
     *
     * @param int $product_type_id product type Id to delete (required)
     *
     * @return Http response
     */
    public function deleteProductType($product_type_id)
    {
        $input = Request::all();

        //path params validation
        if ($product_type_id < 1) {
            throw new \InvalidArgumentException('invalid value for $product_type_id when calling ProductTypesApi.deleteProductType, must be bigger than or equal to 1.');
        }


        //not path params validation

        return response('How about implementing deleteProductType as a delete method ?');
    }
    /**
     * Operation getProductTypeById
     *
     * Find product type by ID.
     *
     * @param int $product_type_id ID of Product Type to return (required)
     *
     * @return Http response
     */
    public function getProductTypeById($product_type_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getProductTypeById as a get method ?');
    }
}
