<?php

/**
 * GEOSERVER API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class ProductStatusApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation createProductStatus
     *
     * Create Status.
     *
     *
     * @return Http response
     */
    public function createProductStatus()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        $body = $input['body'];


        return response('How about implementing createProductStatus as a post method ?');
    }
    /**
     * Operation listProductStatus
     *
     * List of Product Status.
     *
     *
     * @return Http response
     */
    public function listProductStatus()
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing listProductStatus as a get method ?');
    }
    /**
     * Operation updateProductStatus
     *
     * Updates a product status.
     *
     *
     * @return Http response
     */
    public function updateProductStatus()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        $body = $input['body'];


        return response('How about implementing updateProductStatus as a patch method ?');
    }
    /**
     * Operation deleteProductStatus
     *
     * Delete a Product Status.
     *
     * @param int $product_status_id product Status Id to delete (required)
     *
     * @return Http response
     */
    public function deleteProductStatus($product_status_id)
    {
        $input = Request::all();

        //path params validation
        if ($product_status_id < 1) {
            throw new \InvalidArgumentException('invalid value for $product_status_id when calling ProductStatusApi.deleteProductStatus, must be bigger than or equal to 1.');
        }


        //not path params validation

        return response('How about implementing deleteProductStatus as a delete method ?');
    }
    /**
     * Operation getProductStatusById
     *
     * Find stauts by ID.
     *
     * @param int $product_status_id ID of ProductStatus to return (required)
     *
     * @return Http response
     */
    public function getProductStatusById($product_status_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getProductStatusById as a get method ?');
    }
}
